{
  "use": [
    "flow.wizard.v1",
    "action.sql_exec.v1",
    "action.sql_query.v1",
    "action.reply_template.v1",
    "widget.pagination.v1"
  ],
  "intents": [
    {
      "cmd": "/start",
      "reply": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–º–Ω–æ–≥–æ –±–æ—Ç–∞! ü§ñ"
    }
  ],
  "flows": [
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/book",
      "params": {
        "steps": [
          {
            "ask": "–ö–∞–∫—É—é —É—Å–ª—É–≥—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å?",
            "var": "service_name"
          },
          {
            "ask": "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è? (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD HH:MM)",
            "var": "slot",
            "validate": {
              "regex": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$",
              "msg": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD HH:MM, –Ω–∞–ø—Ä–∏–º–µ—Ä: 2025-01-15 14:00"
            }
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "INSERT INTO bookings(bot_id, user_id, service_name, slot, created_at) VALUES(:bot_id, :user_id, :service_name, :slot::timestamptz, NOW())"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "–í–∞—à–∞ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: {{service_name}} –Ω–∞ {{slot}}",
              "llm_improve": true,
              "keyboard": [
                {"text": "üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏", "callback": "/my"},
                {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
              ]
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/my",
      "params": {
        "on_enter": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT id, service_name, to_char(slot,'YYYY-MM-DD HH24:MI') AS slot_time FROM bookings WHERE bot_id=:bot_id AND user_id=:user_id AND slot > NOW() ORDER BY slot",
              "result_var": "user_bookings"
            }
          }
        ],
        "steps": [
          {
            "widget": {
              "type": "widget.pagination.v1",
              "params": {
                "source": {
                  "type": "ctx",
                  "ctx_var": "user_bookings"
                },
                "page_size": 5,
                "item_template": "{{service_name}} - {{slot_time}}",
                "select_callback": "/booking_details",
                "id_field": "id",
                "title": "–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:",
                "empty_text": "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π",
                "extra_keyboard": [
                  {"text": "üìÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å", "callback": "/book"},
                  {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
                ]
              }
            },
            "var": "selected_booking_id"
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT service_name, to_char(slot,'YYYY-MM-DD HH24:MI') AS slot_time FROM bookings WHERE id=:selected_booking_id AND bot_id=:bot_id AND user_id=:user_id",
              "result_var": "booking_details",
              "scalar": false
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "–î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏:\\n{{#each booking_details}}–£—Å–ª—É–≥–∞: {{service_name}}\\n–í—Ä–µ–º—è: {{slot_time}}{{/each}}",
              "llm_improve": true,
              "keyboard": [
                {"text": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", "callback": "/cancel"},
                {"text": "üìã –ö —Å–ø–∏—Å–∫—É", "callback": "/my"},
                {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
              ]
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/services",
      "params": {
        "on_enter": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT id, name, description, price FROM services WHERE bot_id=:bot_id AND active=true ORDER BY name LIMIT :limit OFFSET :offset",
              "result_var": "available_services"
            }
          }
        ],
        "steps": [
          {
            "widget": {
              "type": "widget.pagination.v1",
              "params": {
                "source": {
                  "type": "ctx",
                  "ctx_var": "available_services"
                },
                "page_size": 4,
                "item_template": "{{name}} - {{price}}‚ÇΩ",
                "select_callback": "/service_info",
                "id_field": "id",
                "title": "–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏:",
                "empty_text": "–£—Å–ª—É–≥–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
                "extra_keyboard": [
                  {"text": "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "callback": "/book"},
                  {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
                ]
              }
            },
            "var": "selected_service_id"
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT name, description, price FROM services WHERE id=:selected_service_id AND bot_id=:bot_id",
              "result_var": "service_info",
              "scalar": false
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "{{#each service_info}}üî∏ {{name}}\\n{{description}}\\n–¶–µ–Ω–∞: {{price}}‚ÇΩ{{/each}}",
              "llm_improve": true,
              "keyboard": [
                {"text": "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç—Ç—É —É—Å–ª—É–≥—É", "callback": "/book"},
                {"text": "üìã –í—Å–µ —É—Å–ª—É–≥–∏", "callback": "/services"},
                {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
              ]
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/help",
      "params": {
        "on_enter": [
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\\n/book - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è\\n/my - –º–æ–∏ –∑–∞–ø–∏—Å–∏\\n/services - —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥\\n/help - –ø–æ–º–æ—â—å",
              "llm_improve": true,
              "keyboard": [
                {"text": "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "callback": "/book"},
                {"text": "üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏", "callback": "/my"},
                {"text": "üîß –£—Å–ª—É–≥–∏", "callback": "/services"},
                {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
              ]
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/cancel",
      "params": {
        "on_enter": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT id, service_name, to_char(slot,'YYYY-MM-DD HH24:MI') AS slot_time FROM bookings WHERE bot_id=:bot_id AND user_id=:user_id AND slot > NOW() ORDER BY slot",
              "result_var": "cancellable_bookings"
            }
          }
        ],
        "steps": [
          {
            "widget": {
              "type": "widget.pagination.v1",
              "params": {
                "source": {
                  "type": "ctx",
                  "ctx_var": "cancellable_bookings"
                },
                "page_size": 5,
                "item_template": "{{service_name}} - {{slot_time}}",
                "select_callback": "/confirm_cancel",
                "id_field": "id",
                "title": "–ö–∞–∫—É—é –∑–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å?",
                "empty_text": "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–º–µ–Ω—ã",
                "extra_keyboard": [
                  {"text": "üîô –ù–∞–∑–∞–¥", "callback": "/my"}
                ]
              }
            },
            "var": "cancel_booking_id"
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "DELETE FROM bookings WHERE id=:cancel_booking_id AND bot_id=:bot_id AND user_id=:user_id"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞",
              "llm_improve": true,
              "keyboard": [
                {"text": "üìÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å", "callback": "/book"},
                {"text": "üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏", "callback": "/my"},
                {"text": "üè† –ì–ª–∞–≤–Ω–∞—è", "callback": "/start"}
              ]
            }
          }
        ]
      }
    }
  ]
}