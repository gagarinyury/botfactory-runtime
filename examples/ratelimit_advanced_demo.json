{
  "use": [
    "flow.wizard.v1",
    "policy.ratelimit.v1",
    "action.sql_exec.v1",
    "action.sql_query.v1",
    "action.reply_template.v1"
  ],
  "flows": [
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/premium_book",
      "params": {
        "on_enter": [
          {
            "type": "action.sql_query.v1",
            "params": {
              "sql": "SELECT premium FROM users WHERE bot_id=:bot_id AND user_id=:user_id",
              "result_var": "user_info",
              "scalar": true
            }
          }
        ],
        "steps": [
          {
            "ask": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–º–∏—É–º —É—Å–ª—É–≥—É: vip/deluxe/exclusive",
            "var": "premium_service",
            "validate": {
              "regex": "^(vip|deluxe|exclusive)$",
              "msg": "–í—ã–±–µ—Ä–∏—Ç–µ: vip, deluxe, exclusive"
            }
          }
        ],
        "on_step": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "user",
              "window_s": 3600,
              "allowance": 3,
              "key_suffix": "premium:{{premium_service}}:{{user_info}}",
              "message": "üíé –ü—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∞ {{premium_service}} –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞: {{allowance}} —Ä–∞–∑ –≤ —á–∞—Å –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ {{user_info}}. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "INSERT INTO premium_bookings(bot_id, user_id, service, created_at) VALUES(:bot_id, :user_id, :premium_service, NOW())"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "‚ú® –ü—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∞ {{premium_service}} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!\n\nüíé –°—Ç–∞—Ç—É—Å: {{user_info}}\n‚è∞ –õ–∏–º–∏—Ç: 3 —Ä–∞–∑–∞ –≤ —á–∞—Å"
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/support",
      "params": {
        "steps": [
          {
            "ask": "–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: tech/billing/general",
            "var": "issue_type",
            "validate": {
              "regex": "^(tech|billing|general)$",
              "msg": "–í—ã–±–µ—Ä–∏—Ç–µ: tech, billing, general"
            }
          },
          {
            "ask": "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É",
            "var": "description"
          }
        ],
        "on_step": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "user",
              "window_s": 600,
              "allowance": 2,
              "key_suffix": "support:{{issue_type}}",
              "message": "üéß –õ–∏–º–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ —Ç–∏–ø—É {{issue_type}}: 2 —Ä–∞–∑–∞ –≤ 10 –º–∏–Ω—É—Ç. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "INSERT INTO support_tickets(bot_id, user_id, issue_type, description, status, created_at) VALUES(:bot_id, :user_id, :issue_type, :description, 'open', NOW())"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "üé´ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω!\n\nüìã –¢–∏–ø: {{issue_type}}\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {{description}}\n\n‚è∞ –õ–∏–º–∏—Ç: 2 –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É {{issue_type}} –≤ 10 –º–∏–Ω—É—Ç"
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/bulk_action",
      "params": {
        "on_enter": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "chat",
              "window_s": 300,
              "allowance": 1,
              "message": "üîÑ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —á–∞—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã: 1 —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "steps": [
          {
            "ask": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (1-100)",
            "var": "count",
            "validate": {
              "regex": "^([1-9][0-9]?|100)$",
              "msg": "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100"
            }
          }
        ],
        "on_step": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "user",
              "window_s": 60,
              "allowance": 10,
              "key_suffix": "bulk:items:{{count}}",
              "message": "‚ö° –õ–∏–º–∏—Ç –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É {{count}} —ç–ª–µ–º–µ–Ω—Ç–æ–≤: 10 –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –º–∏–Ω—É—Ç—É. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "on_complete": [
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {{count}} —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n\n‚è∞ –õ–∏–º–∏—Ç—ã:\n‚Ä¢ –ß–∞—Ç: 1 –º–∞—Å—Å–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –≤ 5 –º–∏–Ω\n‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: 10 –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ {{count}} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∏–Ω—É—Ç—É"
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/api_call",
      "params": {
        "steps": [
          {
            "ask": "API endpoint: users/orders/products",
            "var": "endpoint",
            "validate": {
              "regex": "^(users|orders|products)$",
              "msg": "–í—ã–±–µ—Ä–∏—Ç–µ: users, orders, products"
            }
          },
          {
            "ask": "–ú–µ—Ç–æ–¥: GET/POST/PUT/DELETE",
            "var": "method",
            "validate": {
              "regex": "^(GET|POST|PUT|DELETE)$",
              "msg": "–í—ã–±–µ—Ä–∏—Ç–µ: GET, POST, PUT, DELETE"
            }
          }
        ],
        "on_step": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "user",
              "window_s": 60,
              "allowance": 5,
              "key_suffix": "api:{{endpoint}}:{{method}}",
              "message": "üåê API –ª–∏–º–∏—Ç –¥–ª—è {{method}} {{endpoint}}: 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "INSERT INTO api_calls(bot_id, user_id, endpoint, method, created_at) VALUES(:bot_id, :user_id, :endpoint, :method, NOW())"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "üöÄ API –≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω!\n\nüéØ Endpoint: {{endpoint}}\n‚ö° –ú–µ—Ç–æ–¥: {{method}}\n\n‚è∞ –õ–∏–º–∏—Ç: 5 {{method}} –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ {{endpoint}} –≤ –º–∏–Ω—É—Ç—É"
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/emergency",
      "params": {
        "on_enter": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "bot",
              "window_s": 86400,
              "allowance": 10,
              "key_suffix": "emergency",
              "message": "üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã: 10 —Ä–∞–∑ –≤ –¥–µ–Ω—å –¥–ª—è –≤—Å–µ–≥–æ –±–æ—Ç–∞. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {{retry_in}} —Å–µ–∫."
            }
          }
        ],
        "steps": [
          {
            "ask": "–û–ø–∏—à–∏—Ç–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é",
            "var": "emergency_description"
          }
        ],
        "on_complete": [
          {
            "type": "action.sql_exec.v1",
            "params": {
              "sql": "INSERT INTO emergency_requests(bot_id, user_id, description, created_at) VALUES(:bot_id, :user_id, :emergency_description, NOW())"
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –ó–ê–ü–†–û–° –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù\n\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {{emergency_description}}\n\n‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∞\n‚è∞ –õ–∏–º–∏—Ç: 10 —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å"
            }
          }
        ]
      }
    },
    {
      "type": "flow.wizard.v1",
      "entry_cmd": "/rate_test",
      "params": {
        "on_enter": [
          {
            "type": "policy.ratelimit.v1",
            "params": {
              "scope": "user",
              "window_s": 5,
              "allowance": 1,
              "key_suffix": "test:rapid",
              "message": "‚ö° –¢–µ—Å—Ç: 1 –∑–∞–ø—Ä–æ—Å –≤ 5 —Å–µ–∫—É–Ω–¥. {{retry_in}} —Å–µ–∫ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ."
            }
          },
          {
            "type": "action.reply_template.v1",
            "params": {
              "text": "‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª!\n\n‚è±Ô∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ rate limiting"
            }
          }
        ]
      }
    }
  ]
}